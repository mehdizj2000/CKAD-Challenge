apiVersion: v1
kind: Service
metadata:
  name: front-end-service
spec:
  type: NodePort
  selector:
    tier: frontend
  ports:
    - protocol: TCP
      port: 80
      nodePort: 30083
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-webapp 
spec:
  selector:
    matchLabels:
      tier: frontend
  replicas: 2
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      containers:
      - name: nginx
        image: nginx
---
#kubectl taint nodes node1 app_type=alpha:NoSchedule
apiVersion: v1
kind: Pod
metadata:
  name: alpha
spec:
  containers:
  - name: redis
    image: redis
  tolerations:
  - key: "app_type"
    operator: "Equal"
    value: "alpha"
    effect: "NoSchedule"
---
#kubectl label nodes node02 app_type=beta
apiVersion: apps/v1
kind: Deployment
metadata:
  name: beta-apps
spec:
  selector:
    matchLabels:
      tier: frontend
  replicas: 3
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app_type
                operator: In
                values:
                - beta
      containers:
      - name: nginx
        image: nginx
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-vh-routing
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: ckad-mock-exam-solution.com
    http:
      paths:
      - path: /video
        backend:
          serviceName: my-video-service
          servicePort: 8080
---          
apiVersion: v1
kind: Pod
metadata:
  name: nginx1401
spec:
  containers:
  - name: nginx
    image: nginx
    livenessProbe:
      exec:
        command:
        - ls
        - /var/www/html/probe
      initialDelaySeconds: 10
      periodSeconds: 60
---
apiVersion: batch/v1
kind: Job
metadata:
  name: whalesay
spec:
  template:
    spec:
      containers:
      - name: whalesay
        image: docker/whalesay
        command: ["cowsay", "I am going to ace CKAD!"]
      restartPolicy: Never
  backoffLimit: 6
  completions: 10
---
apiVersion: v1
kind: Pod
metadata:
  name: multi-pod
spec:
  containers:
  - name: jupiter
    image: nginx
    env:
    - name: "type"
      value: "planet"
  - name: europa
    image: busybox
    command: ["sleep", "4800"]
    env:
    - name: "type"
      value: "moon"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: custom-volume
spec:
  capacity:
    storage: 50MiB
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /opt/data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: log-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 200Mi
---          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
